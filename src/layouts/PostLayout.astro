---
import Layout from './Layout.astro'
import '../styles/post.css'

let { frontmatter } = Astro.props
---

<Layout title={`Austin Crim | ${frontmatter.title}`}>
  <meta
    name="description"
    content={frontmatter.title + ' | ' + frontmatter.lede}
    slot="og"
  />
  <meta name="og:title" content={frontmatter.title} slot="og" />
  <meta
    name="og:image"
    content={`https://austincrim.com/og/${frontmatter.url
      .split('/')
      .at(-1)}.png`}
    slot="og"
  />
  <meta
    name="og:url"
    content={`https://austincrim.com/${frontmatter.slug}`}
    slot="og"
  />

  <!-- <ul
    class="toc-container outline fixed text-md mt-10 pr-12 space-y-4 -right-1 max-w-[28ch]"
  >
    {
      headings.map((h) => (
        <li>
          <a class="heading-toc text-gray-600" href={`#${h.slug}`}>
            {h.text}
          </a>
        </li>
      ))
    }
  </ul> -->
  <article class="flex flex-col justify-around my-12 space-y-10">
    <div
      class="gradient-container sm:rounded-xl sm:p-1 sm:mx-0 py-1 -mx-10 shadow-md"
    >
      <div
        class="flex flex-col space-y-4 heading p-10 bg-white bg-opacity-60 sm:rounded-lg text-slate-600"
      >
        <h1 class="inline text-4xl">
          {frontmatter.title}
        </h1>
        <span class="text-lg">{frontmatter.lede}</span>
        <span class="text-gray-700">
          {new Date(frontmatter.datePublished).toLocaleDateString('en-US')}
        </span>
      </div>
    </div>
    <div
      class="mt-8 leading-loose prose max-w-none prose-code:break-words article text-lg"
    >
      <slot />
    </div>
  </article>
</Layout>
<!-- <script>
  let headingEls = document.querySelectorAll('h2[id]')
  let tocEls = Array.from(document.querySelectorAll('.heading-toc'))
  let activeHeading

  let observer = new IntersectionObserver(
    (entries) => {
      for (let entry of entries) {
        if (entry.isIntersecting) {
          if (activeHeading) {
            activeHeading.classList.remove('font-semibold', 'text-gray-900')
          }
          activeHeading = tocEls.find(
            (toc) => toc.getAttribute('href') === `#${entry.target.id}`
          )

          activeHeading.classList.add('font-semibold', 'text-gray-900')
        }
      }
    },
    {
      threshold: 1,
      rootMargin: `0% 0% -50% 0%`
    }
  )
  headingEls.forEach((el) => observer.observe(el))
</script> -->
